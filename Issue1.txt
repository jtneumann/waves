
PS E:\Waves> npm install bcrypt@2.0.1 body-parser@1.18.3 cloudinary@1.11.0 concurrently@3.6.0 cookie-parser@1.4.3 dotenv@6.0.0 express@4.16.3 express-formidable@1.0.0 jsonwebtoken@8.3.0 moment@2.22.2 mongoose@5.1.6 multer@1.3.0 --save

> bcrypt@2.0.1 install E:\Waves\node_modules\bcrypt
> node-pre-gyp install --fallback-to-build

[bcrypt] Success: "E:\Waves\node_modules\bcrypt\lib\binding\bcrypt_lib.node" is installed via remote
npm notice created a lockfile as package-lock.json. You should commit this file.
npm WARN waves@1.0.0 No description
npm WARN waves@1.0.0 No repository field.

+ cookie-parser@1.4.3
+ express-formidable@1.0.0
+ dotenv@6.0.0
+ body-parser@1.18.3
+ bcrypt@2.0.1
+ cloudinary@1.11.0
+ concurrently@3.6.0
+ jsonwebtoken@8.3.0
+ moment@2.22.2
+ multer@1.3.0
+ express@4.16.3
+ mongoose@5.1.6
added 220 packages from 144 contributors and audited 374 packages in 23.534s
found 1 low severity vulnerability
  run `npm audit fix` to fix them, or `npm audit` for details
PS E:\Waves> npm audit

                       === npm audit security report ===

# Run  npm install bcrypt@3.0.0  to resolve 1 vulnerability
SEMVER WARNING: Recommended action is a potentially breaking change

  Low             Prototype Pollution

  Package         deep-extend

  Dependency of   bcrypt

  Path            bcrypt > node-pre-gyp > rc > deep-extend

  More info       https://nodesecurity.io/advisories/612


found 1 low severity vulnerability in 374 scanned packages
  1 vulnerability requires semver-major dependency updates.
PS E:\Waves> npm audit fix
npm WARN waves@1.0.0 No description
npm WARN waves@1.0.0 No repository field.

up to date in 1.196s
fixed 0 of 1 vulnerability in 374 scanned packages
  1 package update for 1 vuln involved breaking changes
  (use `npm audit fix --force` to install breaking changes; or do it by hand)
  
  
GIT INIT then ADD warning:
	warning: LF will be replaced by CRLF in package-lock.json.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in package.json.
The file will have its original line endings in your working directory.
